{"ast":null,"code":"var _jsxFileName = \"/Users/chambersv/Documents/AllCampfire/campfirelanding/src/components/header/Drawer.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Link as Scroll } from 'react-scroll';\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    background: 'rgb(252, 96, 96, 0.8)'\n  },\n  fullList: {\n    width: 'auto'\n  },\n  icon: {\n    color: '#fff',\n    margin: '0 auto',\n    fontSize: '2rem',\n    flexGrow: 5,\n    shadow: '2px 2px'\n  },\n  toolBarButtons: {\n    color: '#ffffff',\n    fontSize: '1rem'\n  }\n});\nexport default function Drawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  var toolBarItems = [[\"about\", \"about\"], [\"learnMore\", \"learn more\"], [\"ourTeam\", \"our team\"]];\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, toolBarItems.map(toolBarItem => /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Scroll, {\n    to: toolBarItem[0],\n    smooth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.toolBarButtons,\n    style: {\n      textTransform: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, toolBarItem[1])))), /*#__PURE__*/React.createElement(Divider, {\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.toolBarButtons,\n    style: {\n      textTransform: 'none'\n    },\n    onClick: e => {\n      e.preventDefault();\n      window.location.href = \"https://campfireconvos.com/registration\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"register\"))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    key: 'top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer('top', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SortIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: 'top',\n    open: state['top'],\n    onClose: toggleDrawer('top', false),\n    onOpen: toggleDrawer('top', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, list('top'))));\n}","map":{"version":3,"sources":["/Users/chambersv/Documents/AllCampfire/campfirelanding/src/components/header/Drawer.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","Button","List","Divider","ListItem","SortIcon","Link","Scroll","useStyles","list","width","background","fullList","icon","color","margin","fontSize","flexGrow","shadow","toolBarButtons","Drawer","classes","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","toolBarItems","map","toolBarItem","textTransform","e","preventDefault","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Link as Scroll} from 'react-scroll'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    background: 'rgb(252, 96, 96, 0.8)'   \n  },\n  fullList: {\n    width: 'auto',\n  },\n  icon: {\n    color: '#fff', \n    margin: '0 auto',\n    fontSize:'2rem',\n    flexGrow: 5,\n    shadow: '2px 2px',\n  },\n  toolBarButtons: {\n    color: '#ffffff',\n    fontSize: '1rem',\n    },\n});\n\nexport default function Drawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  var toolBarItems = [[\"about\", \"about\"], [\"learnMore\", \"learn more\"], [\"ourTeam\", \"our team\"], ];\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n        \n      <List>\n        {toolBarItems.map(toolBarItem => (\n            <ListItem>\n                <Scroll to={toolBarItem[0]} smooth={true}>\n                    <Button className={classes.toolBarButtons} style={{textTransform: 'none'}}>\n                        {toolBarItem[1]}\n                    </Button>\n                </Scroll>\n            </ListItem>\n        ))}\n        <Divider orientation='vertical' />\n        <ListItem>\n            <Button \n                className={classes.toolBarButtons} \n                style={{textTransform: 'none'}}\n                onClick={(e) => {\n                    e.preventDefault();\n                    window.location.href=\"https://campfireconvos.com/registration\";\n                }}\n            >\n                register\n            </Button>  \n        </ListItem>\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'top'}>\n          <Button onClick={toggleDrawer('top', true)}>\n                <SortIcon className={classes.icon}/>\n          </Button>\n          <SwipeableDrawer\n            anchor={'top'}\n            open={state['top']}\n            onClose={toggleDrawer('top', false)}\n            onOpen={toggleDrawer('top', true)}\n          >\n            {list('top')}\n          </SwipeableDrawer>\n        </React.Fragment>\n     \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}