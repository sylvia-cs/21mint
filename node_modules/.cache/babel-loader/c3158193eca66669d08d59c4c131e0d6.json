{"ast":null,"code":"var _jsxFileName = \"/Users/chambersv/Campfire/campfirelanding/src/components/header/Drawer.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Link as Scroll } from 'react-scroll';\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    background: '#ff9999'\n  },\n  fullList: {\n    width: 'auto'\n  },\n  icon: {\n    color: 'rgb(48, 46, 65)',\n    margin: '0 auto',\n    fontSize: '2rem',\n    flexGrow: 5,\n    shadow: '2px 2px'\n  },\n  toolBarButtons: {\n    color: 'rgb(48, 46, 65)',\n    fontSize: '1rem'\n  },\n  dividerColor: {\n    background: 'rgb(48, 46, 65)',\n    marginLeft: '20px',\n    marginRight: '20px',\n    marginTop: '10px',\n    marginBottom: '10px'\n  }\n});\nexport default function Drawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  var toolBarItems = [[\"about\", \"about\"], [\"ourTeam\", \"our team\"]];\n  const names = ['register', 'login'];\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, toolBarItems.map(toolBarItem => /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Scroll, {\n    to: toolBarItem[0],\n    offset: -50,\n    smooth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.toolBarButtons,\n    style: {\n      textTransform: 'none',\n      fontFamily: 'Poppins'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, toolBarItem[1])))), /*#__PURE__*/React.createElement(Divider, {\n    classes: {\n      root: classes.dividerColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), names.map(name => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: classes.toolBarButtons,\n      style: {\n        textTransform: 'none',\n        fontFamily: 'Poppins'\n      },\n      onClick: e => {\n        e.preventDefault();\n        name === 'register' ? window.location.href = \"https://campfireconvos.com/registration\" : window.location.href = \"https://campfireconvos.com/login\";\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, name));\n  })));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    key: 'top',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer('top', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SortIcon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: 'top',\n    open: state['top'],\n    onClose: toggleDrawer('top', false),\n    onOpen: toggleDrawer('top', true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, list('top'))));\n}","map":{"version":3,"sources":["/Users/chambersv/Campfire/campfirelanding/src/components/header/Drawer.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","Button","List","Divider","ListItem","SortIcon","Link","Scroll","useStyles","list","width","background","fullList","icon","color","margin","fontSize","flexGrow","shadow","toolBarButtons","dividerColor","marginLeft","marginRight","marginTop","marginBottom","Drawer","classes","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","toolBarItems","names","map","toolBarItem","textTransform","fontFamily","root","name","e","preventDefault","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport SortIcon from '@material-ui/icons/Sort';\nimport { Link as Scroll} from 'react-scroll'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    background: '#ff9999',\n    \n  },\n  fullList: {\n    width: 'auto',\n  },\n  icon: {\n    color: 'rgb(48, 46, 65)', \n    margin: '0 auto',\n    fontSize:'2rem',\n    flexGrow: 5,\n    shadow: '2px 2px',\n  },\n  toolBarButtons: {\n    color: 'rgb(48, 46, 65)',\n    fontSize: '1rem',\n    },\n  dividerColor: {\n    background: 'rgb(48, 46, 65)',\n    marginLeft: '20px',\n    marginRight: '20px',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n});\n\nexport default function Drawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  var toolBarItems = [[\"about\", \"about\"], [\"ourTeam\", \"our team\"], ];\n  const names = ['register', 'login'];\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n        \n      <List>\n        {toolBarItems.map(toolBarItem => (\n            <ListItem>\n                <Scroll to={toolBarItem[0]} offset={-50} smooth={true}>\n                    <Button className={classes.toolBarButtons} style={{textTransform: 'none', fontFamily: 'Poppins'}}>\n                        {toolBarItem[1]}\n                    </Button>\n                </Scroll>\n            </ListItem>\n        ))}\n        \n        <Divider classes={{root: classes.dividerColor}} />\n\n        {names.map (name => {\n            return (\n                <ListItem>\n                <Button \n                    className={classes.toolBarButtons} \n                    style={{textTransform: 'none', fontFamily: 'Poppins'}}\n                    onClick={(e) => {\n                        e.preventDefault();\n                        name === 'register' ? window.location.href=\"https://campfireconvos.com/registration\" : \n                        window.location.href=\"https://campfireconvos.com/login\" ;\n                    }}\n                >\n                    {name} \n                </Button>\n                </ListItem>\n            )\n          })}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n        <React.Fragment key={'top'}>\n          <Button onClick={toggleDrawer('top', true)}>\n                <SortIcon className={classes.icon}/>\n          </Button>\n          <SwipeableDrawer\n            anchor={'top'}\n            open={state['top']}\n            onClose={toggleDrawer('top', false)}\n            onOpen={toggleDrawer('top', true)}\n          >\n            {list('top')}\n          </SwipeableDrawer>\n        </React.Fragment>\n     \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}