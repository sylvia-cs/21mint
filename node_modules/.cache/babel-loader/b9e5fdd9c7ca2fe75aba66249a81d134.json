{"ast":null,"code":"var _jsxFileName = \"/Users/chambersv/Campfire/campfirelanding/src/components/TagArray.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Icon } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5)\n    },\n    fontFamily: 'Poppins'\n  },\n  chip: {\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    outlined: {\n      color: '#000',\n      outlineColor: '#000'\n    }\n  },\n  icon: {\n    borderRadius: '50%',\n    height: '15px',\n    width: '15px'\n  }\n}));\nexport default function Chips({\n  tags,\n  chipStyle\n}) {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  const handleClick = () => {\n    console.info('You clicked the Chip.');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, tags.map(tag => {\n    return /*#__PURE__*/React.createElement(Chip, {\n      size: \"small\",\n      variant: chipStyle.variant,\n      id: \"chip\",\n      classes: {\n        root: classes.chipStyles\n      },\n      clickable: false,\n      className: classes.chip,\n      icon: /*#__PURE__*/React.createElement(Icon, {\n        className: classes.icon,\n        style: {\n          backgroundColor: tag.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }),\n      label: tag.title,\n      style: {\n        fontFamily: 'Poppins'\n      },\n      onClick: handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/chambersv/Campfire/campfirelanding/src/components/TagArray.js"],"names":["React","makeStyles","Chip","Icon","useStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","fontFamily","chip","backgroundColor","outlined","color","outlineColor","icon","borderRadius","height","width","Chips","tags","chipStyle","classes","handleDelete","console","info","handleClick","map","tag","variant","chipStyles","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJ,aAAS;AACPC,MAAAA,MAAM,EAAEL,KAAK,CAACM,OAAN,CAAc,GAAd;AADD,KAJL;AAOJC,IAAAA,UAAU,EAAE;AAPR,GADiC;AAUvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJP,IAAAA,OAAO,EAAE,MAFL;AAGJQ,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,MADC;AAERC,MAAAA,YAAY,EAAE;AAFN;AAHN,GAViC;AAoBvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,KADV;AAEJC,IAAAA,MAAM,EAAE,MAFJ;AAGJC,IAAAA,KAAK,EAAE;AAHH;AApBiC,CAAZ,CAAD,CAA5B;AA2BA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAf,EAAkC;AAC/C,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;;AAEA,QAAMsB,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGiB,IAAI,CAACO,GAAL,CAASC,GAAG,IAAI;AACb,wBACE,oBAAC,IAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAEP,SAAS,CAACQ,OAFvB;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,OAAO,EAAE;AAAC1B,QAAAA,IAAI,EAAEmB,OAAO,CAACQ;AAAf,OAJb;AAKI,MAAA,SAAS,EAAE,KALf;AAMI,MAAA,SAAS,EAAER,OAAO,CAACZ,IANvB;AAOI,MAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEY,OAAO,CAACP,IAAzB;AAA+B,QAAA,KAAK,EAAE;AAACJ,UAAAA,eAAe,EAAEiB,GAAG,CAACf;AAAtB,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPV;AAQI,MAAA,KAAK,EAAEe,GAAG,CAACG,KARf;AASI,MAAA,KAAK,EAAE;AAACtB,QAAAA,UAAU,EAAE;AAAb,OATX;AAUI,MAAA,OAAO,EAAEiB,WAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAeH,GAhBA,CAFH,CADF;AAsBD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Icon } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n    fontFamily: 'Poppins',\n  },\n  chip: {\n    backgroundColor: '#ffffff',\n    display: 'flex',\n    outlined: {\n      color: '#000',\n      outlineColor: '#000',\n    },\n    \n    \n  },\n  icon: {\n    borderRadius: '50%', \n    height: '15px',\n    width: '15px',\n  }, \n}));\n\nexport default function Chips({tags, chipStyle}) {\n  const classes = useStyles();\n\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  const handleClick = () => {\n    console.info('You clicked the Chip.');\n  };\n\n  \n  return (\n    <div className={classes.root}>\n      \n      {tags.map(tag => {\n          return (\n            <Chip \n                size='small'\n                variant={chipStyle.variant}\n                id=\"chip\"\n                classes={{root: classes.chipStyles}}\n                clickable={false}\n                className={classes.chip}\n                icon={<Icon className={classes.icon} style={{backgroundColor: tag.color}}/>}\n                label={tag.title}\n                style={{fontFamily: 'Poppins'}}\n                onClick={handleClick}\n            />     \n           )\n            \n      })}\n      </div>  \n  );\n}\n"]},"metadata":{},"sourceType":"module"}