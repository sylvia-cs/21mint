{"ast":null,"code":"var _jsxFileName = \"/Users/chambersv/Campfire/campfirelanding/src/components/about/ActionMarker.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { School } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({}));\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.school = this.props.school;\n    this.state = {\n      open: false,\n      hover: false\n    };\n\n    this.toggleExpand = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.toggleHover = () => {\n      this.setState({\n        hover: !this.state.hover\n      });\n    };\n\n    this.classes = makeStyles(theme => ({}));\n  }\n\n  render() {\n    var markerStyle;\n    var markerStroke;\n\n    if (this.state.hover) {\n      markerStyle = {\n        fill: 'rgb(97, 94, 115)',\n        boxShadow: '0 0 25px #000'\n      };\n      markerStroke = 5;\n    } else {\n      markerStyle = {\n        fill: 'rgb(255, 143, 143)'\n      };\n      markerStroke = 0;\n    }\n\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"visible\",\n      onClick: this.toggleExpand,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ellipse\", {\n      x: \"50%\",\n      y: \"50%\",\n      rx: \"8\",\n      ry: \"8\",\n      onMouseEnter: this.toggleHover,\n      onMouseLeave: this.toggleHover,\n      stroke: \"rgba(255,255,255, 0.3)\",\n      strokeWidth: markerStroke,\n      style: markerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }), this.state.open ? /*#__PURE__*/React.createElement(\"svg\", {\n      overflow: \"visible\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      width: \"150\",\n      height: \"50\",\n      x: \"-75\",\n      y: \"-55\",\n      rx: \"10\",\n      ry: \"10\",\n      style: {\n        fill: 'rgb(255, 143, 143)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      fill: \"#000\",\n      textLength: \"140\",\n      maxWidth: \"150\",\n      fontSize: true,\n      \"font-family\": \"Poppins\",\n      x: \"-70\",\n      y: \"-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \" \", this.school, \" \")) : null);\n  }\n\n}\n/*\nexport default function ActionMarker() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false\n    }); \n\n    const toggleExpand = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    };\n    const marker = () => {\n        <svg className={classes.marker} onClick={toggleExpand}>\n             <defs>\n                <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"0%\" style={{stopColor:'rgb(255,255,0)', stopOpacity: 1}} />\n                    <stop offset=\"100%\" style={{stopColor:'rgb(255,0,0)', stopOpacity: 1}} />\n                </linearGradient>\n            </defs>\n            <ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" fill=\"url(#grad1)\" />\n            \n\n            {this.state.open ?\n                <text fill=\"#ffffff\" font-size=\"45\" font-family=\"Verdana\" x=\"50\" y=\"86\">SVG</text>\n                :\n                null\n            }  \n        </svg>     \n    }\n\n    return (\n         <svg>\n             {marker}\n         </svg>    \n    )\n}\n*/","map":{"version":3,"sources":["/Users/chambersv/Campfire/campfirelanding/src/components/about/ActionMarker.js"],"names":["React","useEffect","useState","makeStyles","School","useStyles","theme","App","Component","school","props","state","open","hover","toggleExpand","setState","toggleHover","classes","render","markerStyle","markerStroke","fill","boxShadow"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAIA,eAAe,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CC,MAD6C,GACpC,KAAKC,KAAL,CAAWD,MADyB;AAAA,SAE7CE,KAF6C,GAErC;AACPC,MAAAA,IAAI,EAAE,KADC;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAFqC;;AAAA,SAM7CC,YAN6C,GAM9B,MAAM;AACpB,WAAKC,QAAL,CAAc;AACbH,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADL,OAAd;AAGA,KAV4C;;AAAA,SAY7CI,WAZ6C,GAY/B,MAAM;AAChB,WAAKD,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADT,OAAd;AAGH,KAhB4C;;AAAA,SAkB7CI,OAlB6C,GAkBnCd,UAAU,CAAEG,KAAD,KAAY,EAAZ,CAAD,CAlByB;AAAA;;AAwB7CY,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAJ;AACA,QAAIC,YAAJ;;AACA,QAAI,KAAKT,KAAL,CAAWE,KAAf,EAAsB;AAClBM,MAAAA,WAAW,GAAG;AAACE,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,SAAS,EAAE;AAAtC,OAAd;AACAF,MAAAA,YAAY,GAAC,CAAb;AAEH,KAJD,MAIO;AACHD,MAAAA,WAAW,GAAG;AAACE,QAAAA,IAAI,EAAE;AAAP,OAAd;AACAD,MAAAA,YAAY,GAAC,CAAb;AACH;;AACD,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,MAAM,EAAC,MAAzB;AAAgC,MAAA,QAAQ,EAAC,SAAzC;AAAmD,MAAA,OAAO,EAAE,KAAKN,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQD;AAAS,MAAA,CAAC,EAAC,KAAX;AAAiB,MAAA,CAAC,EAAC,KAAnB;AAAyB,MAAA,EAAE,EAAC,GAA5B;AAAgC,MAAA,EAAE,EAAC,GAAnC;AACK,MAAA,YAAY,EAAE,KAAKE,WADxB;AACqC,MAAA,YAAY,EAAE,KAAKA,WADxD;AAEK,MAAA,MAAM,EAAC,wBAFZ;AAGK,MAAA,WAAW,EAAEI,YAHlB;AAIK,MAAA,KAAK,EAAED,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARC,EAgBA,KAAKR,KAAL,CAAWC,IAAX,gBACI;AAAK,MAAA,QAAQ,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMA;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,MAAM,EAAC,IAAzB;AAA8B,MAAA,CAAC,EAAC,KAAhC;AAAsC,MAAA,CAAC,EAAC,KAAxC;AAA8C,MAAA,EAAE,EAAC,IAAjD;AAAsD,MAAA,EAAE,EAAC,IAAzD;AAA8D,MAAA,KAAK,EAAE;AAACS,QAAAA,IAAI,EAAE;AAAP,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,eAQA;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,UAAU,EAAC,KAA7B;AAAmC,MAAA,QAAQ,EAAC,KAA5C;AAAkD,MAAA,QAAQ,MAA1D;AAA2D,qBAAY,SAAvE;AAAiF,MAAA,CAAC,EAAC,KAAnF;AAAyF,MAAA,CAAC,EAAC,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmG,KAAKZ,MAAxG,MARA,CADJ,GAYG,IA5BH,CADJ;AAiCA;;AApEyC;AAsEjD","sourcesContent":["\nimport React, { useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { School } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    \n}))\n\nexport default class App extends React.Component {\n    school = this.props.school; \n    state = {\n     open: false,\n     hover: false\n     };\n    toggleExpand = () => {\n     this.setState({\n      open: !this.state.open\n     });\n    };\n\n    toggleHover = () => {\n        this.setState({\n            hover: !this.state.hover\n        })\n    }\n\n    classes = makeStyles((theme) => ({\n    \n    }))\n    \n\n  \n    render() {\n        var markerStyle; \n        var markerStroke; \n        if (this.state.hover) {\n            markerStyle = {fill: 'rgb(97, 94, 115)', boxShadow: '0 0 25px #000'}\n            markerStroke=5\n\n        } else {\n            markerStyle = {fill: 'rgb(255, 143, 143)'}\n            markerStroke=0\n        }\n        return (\n            <svg width=\"100%\" height=\"100%\" overflow=\"visible\" onClick={this.toggleExpand}>\n            {/*<defs>\n               <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                   <stop offset=\"0%\" style={{stopColor:'rgb(255,255,0)', stopOpacity: 1}} />\n                   <stop offset=\"100%\" style={{stopColor:'rgb(255,0,0)', stopOpacity: 1}} />\n               </linearGradient>\n            </defs> */}\n            \n           <ellipse x=\"50%\" y=\"50%\" rx=\"8\" ry=\"8\"  \n                onMouseEnter={this.toggleHover} onMouseLeave={this.toggleHover}\n                stroke=\"rgba(255,255,255, 0.3)\"\n                strokeWidth={markerStroke}\n                style={markerStyle}\n           />\n           \n\n           {this.state.open ?\n                <svg overflow=\"visible\">\n                \n                {/*<path d=\"M-54,-66 L-50,-63 -46,-66\" />\n                <polygon points=\"-50,-63 -54,-66 -46,-66\" style={{fill: 'rgb(0,0,255)'}} />\n                */}\n\n                <rect width=\"150\" height=\"50\" x=\"-75\" y=\"-55\" rx=\"10\" ry=\"10\" style={{fill: 'rgb(255, 143, 143)'}} />\n                \n                <text fill=\"#000\" textLength=\"140\" maxWidth=\"150\" fontSize font-family=\"Poppins\" x=\"-70\" y=\"-25\"> {this.school} </text>\n                </svg>\n               :\n               null\n           }  \n       </svg>  \n        );\n       }\n      }\n/*\nexport default function ActionMarker() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        open: false\n    }); \n\n    const toggleExpand = () => {\n        this.setState({\n            open: !this.state.open\n        })\n    };\n    const marker = () => {\n        <svg className={classes.marker} onClick={toggleExpand}>\n             <defs>\n                <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"0%\" style={{stopColor:'rgb(255,255,0)', stopOpacity: 1}} />\n                    <stop offset=\"100%\" style={{stopColor:'rgb(255,0,0)', stopOpacity: 1}} />\n                </linearGradient>\n            </defs>\n            <ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" fill=\"url(#grad1)\" />\n            \n\n            {this.state.open ?\n                <text fill=\"#ffffff\" font-size=\"45\" font-family=\"Verdana\" x=\"50\" y=\"86\">SVG</text>\n                :\n                null\n            }  \n        </svg>     \n    }\n\n    return (\n         <svg>\n             {marker}\n         </svg>    \n    )\n}\n*/   "]},"metadata":{},"sourceType":"module"}