(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'styled-components', './utils'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('styled-components'), require('./utils'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.styledComponents, global.utils);
    global.Styles = mod.exports;
  }
})(this, function (exports, _styledComponents, _utils) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.StyledShadow = exports.StyledText = exports.StyledShadowText = undefined;

  var _styledComponents2 = _interopRequireDefault(_styledComponents);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _templateObject = _taggedTemplateLiteral(['\n  position: relative;\n  box-sizing: border-box;\n'], ['\n  position: relative;\n  box-sizing: border-box;\n']),
      _templateObject2 = _taggedTemplateLiteral(['\n  ', '\n  z-index: calc(', ' + 1);\n  color: ', ';\n'], ['\n  ', '\n  z-index: calc(', ' + 1);\n  color: ', ';\n']),
      _templateObject3 = _taggedTemplateLiteral(['\n  ', '\n  z-index: ', ';\n  color: ', ';\n  text-shadow: ', ';\n  user-select: none;\n'], ['\n  ', '\n  z-index: ', ';\n  color: ', ';\n  text-shadow: ', ';\n  user-select: none;\n']);

  function _taggedTemplateLiteral(strings, raw) {
    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  /** Variables **/

  // Default value for styling variables.
  var defaultVariables = {
    shadowTextColor: 'black',
    shadowTextShadowColor: 'gray',
    shadowTextShadowBlur: '5px',
    shadowTextXTranslate: '-5px',
    shadowTextYTranslate: '-5px',
    shadowTextZIndex: '0',
    shadowTextTransitionDuration: '0.2s',
    shadowTextTransitionTiming: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)'
  };

  /** Helpers **/

  // Helper to find value in theme prop or fallback onto default if missing.
  var themeGetter = function themeGetter(props, key) {
    // Look for var in theme
    var value = props.theme && props.theme[key];

    // Fallback on default
    if (typeof value == 'undefined') {
      if (!defaultVariables.hasOwnProperty(key)) {
        (0, _utils.warn)('Variable ' + key + ' has no default value');
      }
      return defaultVariables[key];
    }

    return value;
  };

  // Helper to lookup a variable's value and format variable into CSS variable
  var cssVar = function cssVar(props, camelCaseVariableName) {
    return 'var(' + (0, _utils.camelCaseToCssCustomPropertyCase)(camelCaseVariableName) + ', ' + themeGetter(props, camelCaseVariableName) + ')';
  };

  // Curied version of above function. Returns a function that takes props as param to generate css variable.
  var cssVarFromProps = function cssVarFromProps(camelCaseVariableName) {
    return function (props) {
      return 'var(' + (0, _utils.camelCaseToCssCustomPropertyCase)(camelCaseVariableName) + ', ' + themeGetter(props, camelCaseVariableName) + ')';
    };
  };

  /** Styling **/

  // Styling mixin for an anchored element
  var anchoredElement = function anchoredElement(props) {
    return '\n  position: relative;\n';
  };

  // Styling mixin for a floating element
  var floatingElement = function floatingElement(props) {
    return '\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: ' + cssVar(props, 'shadowTextTransitionDuration') + ' transform ' + cssVar(props, 'shadowTextTransitionTiming') + ',\n              ' + cssVar(props, 'shadowTextTransitionDuration') + ' text-shadow ' + cssVar(props, 'shadowTextTransitionTiming') + ';\n  transform: translate(' + cssVar(props, 'shadowTextXTranslate') + ', ' + cssVar(props, 'shadowTextYTranslate') + ');\n';
  };

  // Styled component
  var StyledShadowText = exports.StyledShadowText = _styledComponents2.default.div(_templateObject);

  // Styled text subcomponent
  var StyledText = exports.StyledText = _styledComponents2.default.div(_templateObject2, function (props) {
    return props.anchorShadow ? floatingElement(props) : anchoredElement(props);
  }, cssVarFromProps('shadowTextZIndex'), cssVarFromProps('shadowTextColor'));

  // Styled shadow  subcomponent
  var StyledShadow = exports.StyledShadow = _styledComponents2.default.div(_templateObject3, function (props) {
    return props.anchorShadow ? anchoredElement(props) : floatingElement(props);
  }, cssVarFromProps('shadowTextZIndex'), function (props) {
    return props.blurShadow ? 'transparent' : cssVar(props, 'shadowTextShadowColor');
  }, function (props) {
    return props.blurShadow ? '0 0 ' + cssVar(props, 'shadowTextShadowBlur') + ' ' + cssVar(props, 'shadowTextShadowColor') : 'none';
  });
});