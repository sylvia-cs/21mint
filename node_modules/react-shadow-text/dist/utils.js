(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.utils = mod.exports;
  }
})(this, function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  // Takes a camel cased string and returns a kebab cased string
  // https://gist.github.com/youssman/745578062609e8acac9f
  var camelToKebabCase = exports.camelToKebabCase = function camelToKebabCase(string) {
    return string.replace(/([A-Z])/g, function (g) {
      return "-" + g[0].toLowerCase();
    });
  };

  // Takes a camel cased string a returns a css custom property cased string
  var camelCaseToCssCustomPropertyCase = exports.camelCaseToCssCustomPropertyCase = function camelCaseToCssCustomPropertyCase(string) {
    return "--" + camelToKebabCase(string);
  };

  // Warn utility for outputting warnings to console
  var warn = exports.warn = function warn(message) {
    return console.warn(message);
  };
});